name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            backend-broker/package-lock.json

      - name: Install Backend Dependencies
        working-directory: ./backend-broker
        run: npm ci

      - name: Run Backend Tests
        working-directory: ./backend-broker
        run: npm test

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run Frontend Tests
        working-directory: ./frontend
        run: npm test

  deploy-backend:
    name: Deploy Backend to Railway
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Railway
        run: |
          echo "Railway deploys automatically on push to main"
          echo "Backend will be deployed via Railway's GitHub integration"

  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        run: |
          echo "Vercel deploys automatically on push to main"
          echo "Frontend will be deployed via Vercel's GitHub integration"

  health-check:
    name: Post-Deployment Health Check
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'

      - name: Wait for deployment
        run: sleep 60

      - name: Check API Health
        run: |
          curl -f https://api.bitcurrent.com/health || exit 1

      - name: Check Frontend
        run: |
          curl -f https://bitcurrent.com || exit 1

      - name: Run E2E Smoke Tests
        working-directory: ./frontend
        run: |
          npm ci
          npx playwright install
          npx playwright test --grep @smoke

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [health-check]
    if: always()
    steps:
      - name: Deployment Success
        if: needs.health-check.result == 'success'
        run: |
          echo "✅ Deployment successful!"
          echo "Frontend: https://bitcurrent.com"
          echo "API: https://api.bitcurrent.com"

      - name: Deployment Failed
        if: needs.health-check.result == 'failure'
        run: |
          echo "❌ Deployment failed!"
          exit 1
